\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{jang2021leucine}
\citation{park2015control}
\citation{ng2011leucine}
\citation{jones2016intracellular}
\citation{tamborski2020evolution}
\citation{padmanabhan2009leucine}
\citation{prigozhin2021analysis}
\citation{barragan2021plant}
\citation{saucet2021integrity}
\citation{finn2011hmmer}
\citation{bateman2010dufs}
\citation{martin2020lrrpredictor}
\citation{berman2000protein}
\citation{jumper2021highly}
\citation{jumper2021highly}
\citation{varadi2024alphafold}
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{on 2D projection of normal bundle embedding}}{4}{section*.5}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Embedding of protein backbone curve into normal bundle followed by projection onto an orthonormal frame yields a 2D curve containing a flattened slinky shown in lower right. The cumulative winding number, computed using the classic formula from calculus, is computed from the projection. Sloped linear segments of the winding number curve indicate coiling.}}{4}{figure.caption.6}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:postnbarc}{{1}{4}{Embedding of protein backbone curve into normal bundle followed by projection onto an orthonormal frame yields a 2D curve containing a flattened slinky shown in lower right. The cumulative winding number, computed using the classic formula from calculus, is computed from the projection. Sloped linear segments of the winding number curve indicate coiling}{figure.caption.6}{}}
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{Obtaining the backbone.}}{4}{section*.7}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{We obtain the core curve of the coil by applying a Gaussian filter to the backbone 3D space curve.}}{4}{section*.8}\protected@file@percent }
\citation{mokhtarian1992theory}
\citation{wahba1965least}
\citation{kabsch1976solution}
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{To obtain the backbone of the coil, we first smooth the embedded residue sequence to suppress the loops by using a Gaussian filter. Let $t$ be the residue number of the protein sequence and $\vec  {\gamma [t]}$ denote the the residue sequence embedded in 3-dimensional Euclidean space, where each component $\gamma _x[t], \gamma _y[t], \gamma _z[t]$ is a discrete time series. Furthermore, let $g_{\sigma }$ be the Gaussian function with standard deviation $\sigma $ and mean $0$, i.e. \begin  {equation} g_{\sigma }[t] = \frac  {1}{\sqrt  {2\pi }\sigma } e^{-t^2 / (2 \sigma ^2)}. \end  {equation} We then sample $g_{\sigma }$ discretely at indices $t$ between $-4 \sigma $ and $4 \sigma $, and we compute the smoothed sequence $\gamma _{i \sigma }$ for the $i^{\text  {th}}$ component as the discrete convolution $\gamma _i * g_{\sigma }$, where $*$ denotes the discrete convolution operator; i.e. the convolution $f*g$ of two discrete functions $f$ and $g$ is given by \begin  {equation} (f*g)[t] = \DOTSB \sum@ \slimits@ _{j=-\infty }^{\infty } f[t]g[t-j]. \end  {equation} For the core curve, we compute $\vec  {\gamma _{20}}[t] = (\gamma _{x20}[t], \gamma _{y20}[t], \gamma _{z20}[t])$.}}{5}{section*.9}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{Tangent computation.}}{5}{section*.10}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{We then compute the tangent vector field of the core curve via a Gaussian derivative, i.e. applying a derivative Gaussian filter by convolving each component $\gamma (t)$ of the core curve}}{5}{section*.11}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{We now compute the tangent bundle $\vec  {\gamma '_{\sigma }[t]}$ by computing component-wise derivatives of the original backbone $\vec  {\gamma [t]}$. To numerically compute derivatives on such discrete data, we convolve each of them with the {\em  derivative} of a Gaussian, $g'_{\sigma [t]}$, to obtain the derivatives $\gamma '_{i \sigma }$, where $g'_{\sigma [t]}$ is}}{5}{section*.12}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{$g_{\sigma }$}}{5}{section*.13}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{of the Gaussian \added {$g_{\sigma }$} via the formula $\gamma * g'_{\sigma }$ (in our case $\sigma = 1$)}}{5}{section*.14}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{where, in practice, we use $\sigma =1$ to compute $\vec  {\gamma '_{1}}$. By associativity of convolution and the derivative, this way of computing $\gamma '_{i \sigma }$ is equivalent to computing the derivative of $\gamma _{i \sigma }$ smoothed once more by $\gamma * g'_{\sigma }$. Such a smoothed derivative is a standard trick \cite  {mokhtarian1992theory} for computing numerically meaningful derivatives of discrete time series which, from a naive continuous point of view, consist of a bunch of step functions with zero derivative everywhere except at the boundaries between time indices, where the derivative is undefined. }}{5}{section*.15}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{\textbf  {Normal computation and orthonormal framing.} Once we have the components of the tangent vector at each residue, we obtain the normal bundle}}{5}{section*.16}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{The normal bundle is obtained}}{5}{section*.17}\protected@file@percent }
\citation{berardini2015arabidopsis}
\citation{blum2021interpro}
\citation{berardini2015arabidopsis}
\citation{blum2021interpro}
\newlabel{eq:wind}{{4}{6}{LRR domain annotation via winding number calculation \deleted {on 2D projection of normal bundle embedding}}{equation.0.4}{}}
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{once again}}{6}{section*.18}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{and integral with cumulative sum}}{6}{section*.19}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{, followed by a cumulative sum to approximate the integral in a discrete setting}}{6}{section*.20}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{\textbf  {Region identification.}}}{6}{section*.21}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{(9 out of 127)}}{6}{section*.24}\protected@file@percent }
\citation{tralie2018topological}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces A discontinuous clipped ReLU function is regressed on the graph of the winding number function for \emph  {A. thaliana} NLR with TAIR \cite  {berardini2015arabidopsis} ID AT3G44400.1. The breakpoints of the regression yields the start and end positions of the LRR domain, highlighted in green. InterPro \cite  {blum2021interpro} domain annotations are shown below regression plot.}}{7}{figure.caption.22}\protected@file@percent }
\newlabel{fig:linreg}{{2}{7}{A discontinuous clipped ReLU function is regressed on the graph of the winding number function for \emph {A. thaliana} NLR with TAIR \cite {berardini2015arabidopsis} ID AT3G44400.1. The breakpoints of the regression yields the start and end positions of the LRR domain, highlighted in green. InterPro \cite {blum2021interpro} domain annotations are shown below regression plot}{figure.caption.22}{}}
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{, thereby necessitating a piecewise linear regression with more pieces}}{7}{section*.25}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{We detect such anomalous structures by computing the standard deviation of the residuals vector for the sloped section of the 2-breakpoint regression. A large residual standard deviation indicates a break in sloping of the winding number and thus a low-confidence, non-coiling region in the protein structure. }}{7}{section*.26}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{Eigenvectors of graph Laplacian on mutual nearest neighbors yield solenoid phase estimation}}{7}{section*.29}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{Solenoid phase estimation}}{7}{section*.30}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{, just as we did with the region annotation}}{7}{section*.31}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{each component of }}{7}{section*.32}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{, using the formula}}{7}{section*.33}\protected@file@percent }
\citation{chung1997spectral}
\citation{godsil2001algebraic}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Four breakpoint piecewise linear regression enables detection of a non-coiling structure (highlighted in yellow at right) which deviates from the usual coiling in the LRR domain. Below regression plot, HMM-based InterPro domain annotations fail to detect non-coiling region within LRR domain. TAIR ID is AT1G72840.2.}}{8}{figure.caption.27}\protected@file@percent }
\newlabel{fig:multibreakpt}{{3}{8}{Four breakpoint piecewise linear regression enables detection of a non-coiling structure (highlighted in yellow at right) which deviates from the usual coiling in the LRR domain. Below regression plot, HMM-based InterPro domain annotations fail to detect non-coiling region within LRR domain. TAIR ID is AT1G72840.2}{figure.caption.27}{}}
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{The formula for such a sliding window embedding of some sequence $f[t]$ is}}{8}{section*.34}\protected@file@percent }
\newlabel{eq:slidingwindow}{{5}{8}{\deleted {Eigenvectors of graph Laplacian on mutual nearest neighbors yield solenoid phase estimation}\added {Solenoid phase estimation}}{equation.0.5}{}}
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{applied to each of the 3 components of the tangent vector field}}{8}{section*.35}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{We concatenate together $\SW  ^{24}_1 \gamma '_{i \sigma }$ for each of the three components of the tangent vector $\gamma '_{i \sigma }$}}{8}{section*.36}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{ curve }}{8}{section*.37}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{sequence}}{8}{section*.38}\protected@file@percent }
\citation{averbuch2015ringit}
\citation{tralie2018topological}
\citation{de2009persistent}
\citation{perea2020sparse}
\citation{vejdemo2015cohomological}
\citation{rybakken2019decoding}
\citation{martin2020lrrpredictor}
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{Intuitively, the graph Laplacian is a generalization of a discrete second derivative operator to graphs. For the same reason that sines and cosines are eigenfunctions of the second derivative operator with associated eigenvalues proportional to the frequency, eigenvectors of the graph Laplacian on a graph of a circle are sine/cosine pairs, up to a phase, that go through an integer number of cycles over one revolution of the circle, and lower frequency pairs have smaller eigenvalues \cite  {godsil2001algebraic}. We expect a near circular graph in the mutual-NN graph in the periodic LRR region, and the Laplacian eigenvectors are known to degrade gracefully in the presence of imperfections. Therefore, we expect the two eigenvectors with the smallest eigenvalue to be approximately periodic and $\pi /4$-phase shifted. If we use the two entries of these eigenvectors as \emph  {x} and \emph  {y} coordinates, respectively, we obtain a projection of the LRR coil onto a circle winding in the plane. Our phase estimation $\theta $ along the LRR coil is simply obtained as $\theta = \tan ^{-1}(\frac  {y}{x})$, as shown in Figure \ref {fig:graphlap} below.}}{9}{section*.39}\protected@file@percent }
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{We note that a similar phase-estimation scheme with the graph Laplacian of mutual nearest neighbors has been used to order photographs along a loop \cite  {averbuch2015ringit} and to parameterize periodic videos \cite  {tralie2018topological}. Furthermore, a spiritually similar but more computationally intensive topological phase estimation based on cohomology \cite  {de2009persistent, perea2020sparse} has been applied to motion capture data \cite  {vejdemo2015cohomological} and to recovering phase based on head orientation from neural data\cite  {rybakken2019decoding}.}}{9}{section*.40}\protected@file@percent }
\@writefile{loc}{\contentsline {deleted}{Deleted: \truncate {\Changestruncatewidth }{Generically, the leading pair of 0\relax \textsuperscript  {th} and 1\relax \textsuperscript  {st} eigenvectors of the graph Laplacian are out-of-phase periodic functions with frequency matching the expected frequency of the LRR coil (Figure \ref {fig:graphlap}), and thus yield projection onto principal axes perpendicular to the core of the coil (Figure \ref {fig:graphlap}). Given these \emph  {x} and \emph  {y} coordinates, we compute phase estimation $\theta $ to obtain a phase estimation along the LRR coil as shown in Figure \ref {fig:graphlap} below.}}{9}{section*.42}\protected@file@percent }
\newlabel{discr}{{6}{9}{Cumulative winding number reveals errors made by ML-based LRR repeat unit delineator}{equation.0.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Graph Laplacian eigenvectors of mutual nearest neighbor graph on LRR solenoid curve tangent vectors. LRRPredictor residues are shown as blue horizontal lines on eigenmatrix plot. The 0\relax \textsuperscript  {th} and 1\relax \textsuperscript  {st} eigenvectors have period matching the expected period of the solenoid as determined by LRRPredictor. Leading eigenvectors of graph Laplacian are periodic and are $\pi /4$-phase shifted, thereby yielding projections of LRR coil onto a winding around a circle in a 2D-plane. Phase estimation using the formula $\theta = \tan ^{-1}(\frac  {y}{x})$ of LRR coil at bottom taking values between $-\pi $ and $\pi $. }}{10}{figure.caption.41}\protected@file@percent }
\newlabel{fig:graphlap}{{4}{10}{Graph Laplacian eigenvectors of mutual nearest neighbor graph on LRR solenoid curve tangent vectors. LRRPredictor residues are shown as blue horizontal lines on eigenmatrix plot. The \nth {0} and \nth {1} eigenvectors have period matching the expected period of the solenoid as determined by LRRPredictor. Leading eigenvectors of graph Laplacian are periodic and are $\pi /4$-phase shifted, thereby yielding projections of LRR coil onto a winding around a circle in a 2D-plane. Phase estimation using the formula $\theta = \tan ^{-1}(\frac {y}{x})$ of LRR coil at bottom taking values between $-\pi $ and $\pi $}{figure.caption.41}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces In yellow, histogram of discrepancies for LRRpredictor outputs on 127 \emph  {A. thaliana} NLRs showing a large peak around the mode. In blue, a histogram of discrepancies for manually-annotated LRR repeat units used as the training set for the LRRpredictor model. This ground truth dataset produces low overall discrepancy compared to LRRpredictor model outputs, thereby demonstrating the ability of the cumulative winding number computation to faithfully recapitulate the periodicity of the LRR coil.}}{11}{figure.caption.45}\protected@file@percent }
\newlabel{fig:lrrpred_hist}{{5}{11}{In yellow, histogram of discrepancies for LRRpredictor outputs on 127 \emph {A. thaliana} NLRs showing a large peak around the mode. In blue, a histogram of discrepancies for manually-annotated LRR repeat units used as the training set for the LRRpredictor model. This ground truth dataset produces low overall discrepancy compared to LRRpredictor model outputs, thereby demonstrating the ability of the cumulative winding number computation to faithfully recapitulate the periodicity of the LRR coil}{figure.caption.45}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces \textbf  {LRRPredictor discrepancy computation reveals proteins with erroneously repeated predictions}. NLRs with high-discrepancy LRRPredictor outputs tend to carry repetition errors or missing motif annotations. Orange vertical lines overlaid on winding number plot depict LRRPredictor residues, while purple horizontal lines depict the integer-spaced grid which best approximates the winding number graph evaluated at LRRPredictor residues. A repetition error can be seen in the grid representation as a doubled orange line around residue 685. At bottom, LRRPredictor residues are mapped onto graph Laplacian eigenvector phase estimation, revealing an pair of duplicates with adjacent phase.}}{12}{figure.caption.46}\protected@file@percent }
\newlabel{fig:lrrpred_grid}{{6}{12}{\textbf {LRRPredictor discrepancy computation reveals proteins with erroneously repeated predictions}. NLRs with high-discrepancy LRRPredictor outputs tend to carry repetition errors or missing motif annotations. Orange vertical lines overlaid on winding number plot depict LRRPredictor residues, while purple horizontal lines depict the integer-spaced grid which best approximates the winding number graph evaluated at LRRPredictor residues. A repetition error can be seen in the grid representation as a doubled orange line around residue 685. At bottom, LRRPredictor residues are mapped onto graph Laplacian eigenvector phase estimation, revealing an pair of duplicates with adjacent phase}{figure.caption.46}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Sliding window L2 distance (SWL2D) from winding number to median secant line detects small hairpins/insertions in LRR coil domain. Structure at bottom is colored according to SWL2D where yellow values are higher.}}{13}{figure.caption.48}\protected@file@percent }
\newlabel{fig:hairpin}{{7}{13}{Sliding window L2 distance (SWL2D) from winding number to median secant line detects small hairpins/insertions in LRR coil domain. Structure at bottom is colored according to SWL2D where yellow values are higher}{figure.caption.48}{}}
\citation{tang2022topological}
\citation{cang2017topologynet}
\citation{tang2022topological}
\citation{cang2017topologynet}
\citation{steuernagel2020nlr}
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{ The use of geometric and topological concepts in our method aligns with previous studies that have explored Topological Data Analysis (TDA) in protein structure and dynamics \cite  {tang2022topological, cang2017topologynet}. For instance, SINATRA Pro has been used to identify biophysical signatures in protein dynamics by detecting topological differences between protein structures \cite  {tang2022topological}. Similarly, TopologyNet integrates TDA with deep learning for biomolecular property predictions \cite  {cang2017topologynet}. Our approach builds on these foundational ideas by leveraging large-scale AI/ML-derived databases like AlphaFoldDB, showcasing the potential of combining AI-based structural predictions with geometric and topological analyses for advanced domain annotation. }}{14}{section*.50}\protected@file@percent }
\bibstyle{vancouver}
\bibdata{references}
\bibcite{jang2021leucine}{1}
\bibcite{park2015control}{2}
\@writefile{loc}{\contentsline {added}{Added: \truncate {\Changestruncatewidth }{Our method does come with limitations. For instance, while it can detect non-coiling structural anomalies within the LRR domain, the origin, authenticity, and potential functionality of these regions remain ambiguous. Moreover, our structure-based annotation method, albeit effective for domains with a straightforward geometric description like LRRs, might not be universally applicable to other protein domains without developing a new geometric model tailored to them. This underscores a potential limitation when juxtaposing sequence-based versus structure-based domain annotation, highlighting a future avenue warranting exploration: developing geometric models for other protein domains.}}{15}{section*.51}\protected@file@percent }
\bibcite{ng2011leucine}{3}
\bibcite{jones2016intracellular}{4}
\bibcite{tamborski2020evolution}{5}
\bibcite{padmanabhan2009leucine}{6}
\bibcite{prigozhin2021analysis}{7}
\bibcite{barragan2021plant}{8}
\bibcite{saucet2021integrity}{9}
\bibcite{finn2011hmmer}{10}
\bibcite{bateman2010dufs}{11}
\bibcite{martin2020lrrpredictor}{12}
\bibcite{berman2000protein}{13}
\bibcite{jumper2021highly}{14}
\bibcite{varadi2024alphafold}{15}
\bibcite{mokhtarian1992theory}{16}
\bibcite{wahba1965least}{17}
\bibcite{kabsch1976solution}{18}
\bibcite{berardini2015arabidopsis}{19}
\bibcite{blum2021interpro}{20}
\bibcite{tralie2018topological}{21}
\bibcite{chung1997spectral}{22}
\bibcite{godsil2001algebraic}{23}
\bibcite{averbuch2015ringit}{24}
\bibcite{de2009persistent}{25}
\bibcite{perea2020sparse}{26}
\bibcite{vejdemo2015cohomological}{27}
\bibcite{rybakken2019decoding}{28}
\bibcite{tang2022topological}{29}
\bibcite{cang2017topologynet}{30}
\bibcite{steuernagel2020nlr}{31}
\gdef \@abspage@last{18}
